#include "2401.h"

/*
**********************************************************************
*                         本地全局变量
**********************************************************************
*/
sbit KEY1 = P3^1;	 				//发送按键 
sbit KEY2 = P3^0;
sbit KEY3 = P3^2;
sbit KEY4 = P3^3;

sbit LED1 = P2^0;					
sbit LED2 = P2^1;	 				//发送数据时显示灯+接收到数据后的功能实现灯
 


void delay_ms(u16 z);


/*********************************************************************
* 函 数 名       : main
* 函数功能		 : 主函数
* 参数列表       : 无
* 函数输出    	 : 无
*********************************************************************/
void main(void)
{
	u8 Tx_Buf1[] = {1};		// 发送的信息1 
	u8 Rx_Buf[32];  		// 接收到的数据暂存器，最多32字节数据  

	InitNRF24L01();
	LED2 = 1;				//初始灯6熄灭   

	while (NRF24L01Check())		//检查不到24l01则报警 
	{
		LED2 = 0;
		delay_ms(200);
		LED2 = 1;
		delay_ms(200);
	}
	while (1)
	{	
		RxMode();							//接收模式  
		while (!NRF24L01RxPacket(Rx_Buf)) 	//等待接收数据,返回1则接收到数据,在等待接收数据期间,可以随时变成发送模式  
	    {
			if (KEY1 == 0)	 				//按了按键1,则变成发送模式,发送对应数据,发送完后变成接收模式 
			{	
				delay_ms(5);				//消抖动 
				if (KEY1 == 0)
				{
			 		while (!KEY1);
					TxMode();	 					//发送模式 
					Tx_Buf1[0] = 1;					//将1发送过去
			    	NRF24L01TxPacket(Tx_Buf1);		//发送命令数据
					LED1 = 0;
			    	delay_ms(300);
					LED1 = 1;
			    	delay_ms(300);					//发送后LED1闪一下 
					break;							//退出最近的循环,从而变回接收模式,这句关键
				 }	
			 }
			 else if (KEY2 == 0)	 				
			 {	
				delay_ms(5);//消抖动 
				if (KEY2 == 0)
				{
			 		while (!KEY2);
					TxMode();	 					//发送模式 
					Tx_Buf1[0] = 2;					//将2发送过去
			    	NRF24L01TxPacket(Tx_Buf1);		//发送命令数据
					LED1 = 0;
			    	delay_ms(300);
					LED1 = 1;
			    	delay_ms(300);					
					break;							//退出最近的循环,从而变回接收模式,这句关键
				 }	
			  }
			  else if (KEY3 == 0)	 					
			  {	
				delay_ms(5);//消抖动 
				if (KEY3 == 0)
				{
			 		while (!KEY3);
					TxMode();	 					//发送模式 
					Tx_Buf1[0] = 3;					//将3发送过去
			    	NRF24L01TxPacket(Tx_Buf1);		//发送命令数据
					LED1 = 0;
			    	delay_ms(300);
					LED1 = 1;
			    	delay_ms(300);					
					break;							//退出最近的循环,从而变回接收模式,这句关键
				 }	
			  }
			  else if (KEY4 == 0)	 					//按了按键8,则变成发送模式,发送对应数据,发送完后变成接收模式 
			  {	
				delay_ms(5);//消抖动 
				if (KEY4 == 0)
				{
			 		while (!KEY4);
					TxMode();	 					//发送模式 
					Tx_Buf1[0] = 4;					//将4发送过去
			    	NRF24L01TxPacket(Tx_Buf1);		//发送命令数据
					LED1 = 0;
			    	delay_ms(300);
					LED1 = 1;
			    	delay_ms(300);					
					break;							//退出最近的循环,从而变回接收模式,这句关键
				 }	
			  }
		 }
		 if (Rx_Buf[0] == 1)	 	//若接收到对应的数据则实现对应功能 
		 {
		     Rx_Buf[0] = 0;				//清空数据 
		     LED2 = 0;
		 	 delay_ms(300);
		 	 LED2 = 1;
		 	 delay_ms(300);				//接收到数据后LED2闪烁1次  
		 }
	}
}



/*********************************************************************
* 函 数 名       : delay_ms
* 函数功能		 : 延时z毫秒
* 参数列表       : 无
* 函数输出    	 : 无
*********************************************************************/
void delay_ms(u16 z)			//延时函数 
{
	u16 y;

	while (z--)
		for(y=110; y>0; y--);
}
