#include "2401.h"

sbit KEY4 = P3^3;	 				//发送按键 

sbit LED7 = P2^7;					//小灯闪烁提示报警 
sbit LED2 = P2^1;	 				//发送数据时显示灯
 


void delay_ms(u16 z);


/*********************************************************************
* 函 数 名       : main
* 函数功能		 : 主函数
* 参数列表       : 无
* 函数输出    	 : 无
*********************************************************************/
void main(void)
{
	u8 i=0;//记录按下次数
	u8 Tx_Buf[] = {1};				//发送的信息1 
	u8 Rx_Buf[32];  				//接收到的数据暂存器，最多32字节数据  
	InitNRF24L01();
	LED2 = 1;						//初始灯2熄灭   

	while (NRF24L01Check())					//检查不到24l01则小灯7闪烁提示报警 
	{
		LED7 = 0;
		delay_ms(200);
		LED7 = 1;
		delay_ms(200);
	}
	while (1)
	{	
		RxMode();							//接收模式  
		while (!NRF24L01RxPacket(Rx_Buf)) 	//等待接收数据,返回1则接收到数据,在等待接收数据期间,可以随时变成发送模式  
	    {
			if (KEY4 == 0)	 					//按了按键4,则变成发送模式,发送对应数据,发送完后变成接收模式 
			{	
				delay_ms(5);//消抖动 
				if (KEY4 == 0)
				{
			 		while (!KEY4);
					TxMode();	 //发送模式 
			    	NRF24L01TxPacket(Tx_Buf);		//发送命令数据
					LED7 = 0;
			    	delay_ms(300);
					LED7 = 1;
			    	delay_ms(300);					//发送后LED7闪一下 
					break;							//退出最近的循环,从而变回接收模式,这句关键
				 }	
			 }
		 }

		switch (Rx_Buf[0])
		{//对数据进行分析来控制灯亮
			case 0:
				break;
			case 1:
				Rx_Buf[0] = 0;				//清空数据 
				i++;
			  if(i==10)
					i=0;
				DigDisplay(i);
				break;
			default:
				break;
		}	 	
	}
}


/*********************************************************************
* 函 数 名       : delay_ms
* 函数功能		 : 延时z毫秒
* 参数列表       : 无
* 函数输出    	 : 无
*********************************************************************/
void delay_ms(u16 z)			//延时函数 
{
	u16 y;
	while (z--)
		for (y=110; y>0; y--);
}
